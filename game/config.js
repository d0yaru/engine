//------------------------------------------------------------------------------
// Какой шейдер подключить
// Colour
// document.write('\
// 	<script src="/data/engine/core/Shader/Colour/cShaderC.js"></script>\
// 	<script src="/data/engine/core/Shader/Colour/cObjPlaneC.js"></script>\
// ');
// Colour Light
// document.write('\
// 	<script src="/data/engine/core/Shader/ColourLight/cShaderCL.js"></script>\
// 	<script src="/data/engine/core/Shader/ColourLight/cObjPlaneCL.js"></script>\
// ');
// Texture
// document.write('\
// 	<script src="/data/engine/core/Shader/Texture/cShaderT.js"></script>\
// 	<script src="/data/engine/core/Shader/Texture/cObjPlaneT.js"></script>\
// ');
// Texture Light
// document.write('\
// 	<script src="/data/engine/core/Shader/TextureLight/cShaderTL.js"></script>\
// 	<script src="/data/engine/core/Shader/TextureLight/cObjPlaneTL.js"></script>\
// ');
// Texture Light Colour
document.write('\
	<script src="/data/engine/core/Shader/TextureLight_Colour/cShaderTL_C.js"></script>\
	<script src="/data/engine/core/Shader/TextureLight_Colour/cObjPlaneTL_C.js"></script>\
');
//------------------------------------------------------------------------------
document.write('\
	<script src="/data/engine/core/cCamera.js"></script>\
	<script src="/data/engine/core/cPlayer.js"></script>\
	<script src="/data/engine/core/cDraw.js"></script>\
	<script src="/data/engine/core/cLoadtexture.js"></script>\
	<script src="/data/engine/core/cFps.js"></script>\
	<script src="/data/engine/physics/cCollision2d.js"></script>\
	<script src="/data/engine/main.js" defer></script>\
');
//------------------------------------------------------------------------------
// Интерфейс
document.write('\
	<div id="fps">0</div>\
	<div id="objData">0</div>\
	<div id="cam">0</div>\
	<div id="pawn">0</div><br>\
	<div id="debug">0</div><br>\
	\
	<div id="level"> Level: 0</div>\
	<div id="key"> Key: 0</div>\
	<div id="crystal"> Crystal: 0</div>\
	<div id="health"> Health: 100</div>\
	<div id="enemyhp"> EnemyHP: 100</div>\
');
//------------------------------------------------------------------------------
class Map// true false
{
	xColour = false;
	xTexture = true;
	xLighting = true;
	//--------------------------------------------------------------------------
	objId = 0;// id выбранного обьекта
	//--------------------------------------------------------------------------
	// Цвет неба
	sr = 0.3;
	sg = 0.55;
	sb = 0.67;
	//--------------------------------------------------------------------------
	// Спавн игрока X, Y, Z
	spawnx = 0;
	spawny = 100;
	spawnz = -150;
	// Куда смотрит игрок rX, rY
	spawnrx = 0;
	spawnry = 0;
	//--
	speed = 4;// Скорость игрока
	boost = 10;// Ускорение на Shift
	grav = 1.5;// Гравитация игрока
	jump = 5;// Сила прышка
	//--------------------------------------------------------------------------
	// Карта
	imgpath = "game";// Папка с изображениями
	typeimg = ".jpg";// Формат изображений
	countimg = 17;// Количество изображений
	//--------------------------------------------------------------------------
	// Интерфейс игры
	level = 0;
	key = 0;
	crystal = 0;
	health = 100;
	enemyhp = 100;
	//--------------------------------------------------------------------------

	//--------------------------------------------------------------------------
	setmap =
	[
		[// 0
			// [x,y,z,rx,ry,rz,sx,sy,sz,idImg,objType,Type(11),count(12)]
			[-200,50,500,   0,0,180,   70,70,1,   16,0,10,100],// Приведение

			[0,90,1000,   0,180,0,   2000,200,1,   0,0,0,1],// 0
			[0,90,-1000,   0,0,0,   2000,200,1,   1,0,0,1],// 1
			[1000,90,0,   0,-90,0,   2000,200,1,   2,0,0,1],// 2
			[-1000,90,0,   0,90,0,   2000,200,1,   3,0,0,1],// 3

			[0,0,0,   90,0,0,   2000,2000,1,   9,0,0,1],// 4 земля
			
			[-300,0,0,   90,30,0,   2000,1000,1,   6,0,0,0],// 5
			[0,0,-400,   60,0,30,   2000,1000,1,   10,0,0,0],// 6

			[29,120,0,   0,0,0,   50,50,1,   3,0,0,1],// 7
			[-33,25,0,   0,0,0,   50,50,1,   2,0,0,1],// 8
			[-33,75,0,   0,0,0,   50,50,1,   1,0,0,1],// 9
			[100,25,0,   0,0,0,   50,50,1,   2,0,0,1],// 8
			[100,75,0,   0,0,0,   50,50,1,   1,0,0,1],// 9

			[2000,0,0,90,0,0,2000,2000,1,6,0,0,1],
			[-2000,0,0,90,0,0,2000,2000,1,6,0,0,1],
			[0,0,2000,90,0,0,2000,2000,1,6,0,0,1],
			[0,0,-2000,90,0,0,2000,2000,1,6,0,0,1],
			
			[2000,0,2000,90,0,0,2000,2000,1,6,0,0,1],
			[-2000,0,2000,90,0,0,2000,2000,1,6,0,0,1],
			[-2000,0,-2000,90,0,0,2000,2000,1,6,0,0,1],
			[2000,0,-2000,90,0,0,2000,2000,1,6,0,0,1],

			[1500,70,1500,0,0,0,100,200,1,3,0,0,1],
			[-1200,70,-1500,0,0,0,100,200,1,4,0,0,1],
			[-1400,70,1500,0,0,0,100,200,1,5,0,0,1],
			[1300,70,-1500,0,0,0,10,10,1,8,0,0,1],

			[500,50,500,   0,0,180,   50,50,1,   11,0,7,1],// дверь
			[300,50,500,   0,0,180,   50,50,1,   12,0,8,1],// ключ

			[200,50,500,   0,0,180,   50,50,1,   13,0,9,10],// Кристал
			[100,50,500,   0,0,180,   50,50,1,   14,0,9,20],// Кристал
			[0,50,500,   0,0,180,   50,50,1,   15,0,9,30],// Кристал

			[-400,50,500,   0,0,180,   70,70,1,   17,0,11,50],// Аптечка
		],
		[//1
			// [x,y,z,rx,ry,rz,sx,sy,sz,idImg,objType,Type(11),count(12)]
			[-200,50,500,   0,0,180,   70,70,1,   16,0,10,100],// Приведение

			[0,90,1000,   0,180,0,   2000,200,1,   4,0,0,1],// 0
			[0,90,-1000,   0,0,0,   2000,200,1,   5,0,0,1],// 1
			[1000,90,0,   0,-90,0,   2000,200,1,   6,0,0,1],// 2
			[-1000,90,0,   0,90,0,   2000,200,1,   7,0,0,1],// 3

			[0,0,0,   90,0,0,   2000,2000,1,   1,0,0,1],// 4 земля

			[500,50,500,   0,0,180,   50,50,1,   11,0,7,1],// дверь
			[300,50,500,   0,0,180,   50,50,1,   12,0,8,1],// ключ

			[200,50,500,   0,0,180,   50,50,1,   13,0,9,10],// Кристал
			[100,50,500,   0,0,180,   50,50,1,   14,0,9,20],// Кристал
			[0,50,500,   0,0,180,   50,50,1,   15,0,9,30],// Кристал

			[-400,50,500,   0,0,180,   70,70,1,   17,0,11,50],// Аптечка
		],
		[// 2
			// [x,y,z,rx,ry,rz,sx,sy,sz,idImg,objType,Type(11),count(12)]
			[-200,50,500,   0,0,180,   70,70,1,   16,0,10,100],// Приведение

			[0,90,1000,   0,180,0,   2000,200,1,   0,0,0,1],// 0
			[0,90,-1000,   0,0,0,   2000,200,1,   1,0,0,1],// 1
			[1000,90,0,   0,-90,0,   2000,200,1,   2,0,0,1],// 2
			[-1000,90,0,   0,90,0,   2000,200,1,   3,0,0,1],// 3

			[0,0,0,   90,0,0,   2000,2000,1,   7,0,0,1],// 4 земля

			[200,50,500,   0,0,180,   50,50,1,   13,0,9,10],// Кристал
			[100,50,500,   0,0,180,   50,50,1,   14,0,9,20],// Кристал
			[0,50,500,   0,0,180,   50,50,1,   15,0,9,30],// Кристал

			[-400,50,500,   0,0,180,   70,70,1,   17,0,11,50],// Аптечка
		],
	];
	//--------------------------------------------------------------------------
	constructor() {}
	//--------------------------------------------------------------------------
	collisionAction(id)// действие при столкновении с объектами
	{
		//----------------------------------------------------------------------
		if (obj[id][11] == 7)// дверь
		{
			map.nextLevel(id);
		}
		//----------------------------------------------------------------------
		if (obj[id][11] == 8)// ключ
		{
			map.setKey(obj[id][12]);
			obj[id][12] = 0;
		}
		//----------------------------------------------------------------------
		if (obj[id][11] == 9)// Кристал
		{
			map.setCrystal(obj[id][12]);
			obj[id][12] = 0;
		}
		//----------------------------------------------------------------------
		if (obj[id][11] == 10)// Приведение
		{
			map.setHealth(-1);
		}
		//----------------------------------------------------------------------
		if (obj[id][11] == 11)// Аптечка
		{
			map.setHealth(obj[id][12]);
			obj[id][12] = 0;
		}
		//----------------------------------------------------------------------
		// console.log(` >> My Crystal: [ ${map.crystal} ]`);
	}
	//--------------------------------------------------------------------------
	setHealth(count)
	{
		// wounded.play();
		map.health += count;
		// console.log(` >> My Health: [ ${map.health} ]`);
		document.getElementById("health").innerHTML = " Health: " + map.health;
		if (map.health < 0)
		{
			// deathSound.play();
			alert(" >>   G A M E   O V E R !   ( Нажмите [F5] )   <<< ");
			// console.log(` >>   G A M E   O V E R !`);
			// setTimeout(() => {  loadMap(0); }, 500);
		}
	}
	//--------------------------------------------------------------------------
	setCrystal(count)
	{
		// bring.play();
		map.crystal += count;
		// console.log(` >> My Health: [ ${map.health} ]`);
		document.getElementById("crystal").innerHTML = " Crystal: " + map.crystal;
		// if (map.health < 0)
		// {
		// 	alert(" >>   G A M E   O V E R !   ( Нажмите [F5] )   <<< ");
		// 	// console.log(` >>   G A M E   O V E R !`);
		// 	// setTimeout(() => {  loadMap(0); }, 500);
		// }
	}
	//--------------------------------------------------------------------------
	setKey(count)
	{
		map.key += count;
		document.getElementById("key").innerHTML = " Key: " + map.key;
	}
	//--------------------------------------------------------------------------
	nextLevel(id)
	{
		if (map.key)
		{
			map.key--;
			map.level++;
			obj[id][12] = 0;
			document.getElementById("level").innerHTML = " Level: " + map.level;
			setTimeout(() => {  loadMap(map.level); }, 500);
		}
		else console.log(` >> Give Key!!!`);
	}
	//--------------------------------------------------------------------------
}
//------------------------------------------------------------------------------
